name: CI

on:
  push:
  release:
    types: [published]

jobs:
  build:
    name: Build always and publish on release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_version.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build (allways) and push (on release)
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64/v8
          push: ${{ github.event_name == 'release' }}
          tags: daschswiss/apache-jena-fuseki:latest, daschswiss/apache-jena-fuseki:${{ steps.get_version.outputs.VERSION }}

  trigger-dev-deployment:
    name: Trigger deployment to DEV
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Trigger deployment to DEV
        env:
          IMAGE_TAG: ${{ needs.build.outputs.tag }}
          JENKINS_BASIC_AUTH_USER: ${{ secrets.JENKINS_BASIC_AUTH_USER }}
          JENKINS_BASIC_AUTH_PASS: ${{ secrets.JENKINS_BASIC_AUTH_PASS }}
          JENKINS_DEV_WEBHOOK: ${{ secrets.JENKINS_DEV_WEBHOOK }}
        run: |
          curl -f -u "${JENKINS_BASIC_AUTH_USER}:${JENKINS_BASIC_AUTH_PASS}" \
               -X POST "${JENKINS_DEV_WEBHOOK}" \
               -d "Service=db&Version=${IMAGE_TAG}"